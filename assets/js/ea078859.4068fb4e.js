"use strict";(self.webpackChunkjaymartmedia=self.webpackChunkjaymartmedia||[]).push([[1352],{3759:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>i});var l=s(5893),a=s(1151);const r={},c="JQ",o={id:"helpful-commands/cli/jq",title:"JQ",description:"JQ is a command line tool to filter/format json.",source:"@site/docs/helpful-commands/cli/jq.md",sourceDirName:"helpful-commands/cli",slug:"/helpful-commands/cli/jq",permalink:"/articles/helpful-commands/cli/jq",draft:!1,unlisted:!1,editUrl:"https://github.com/jaymartmedia/jaymartmedia.github.io/tree/main/docs/helpful-commands/cli/jq.md",tags:[],version:"current",frontMatter:{},sidebar:"commandsSidebar",previous:{title:"GPG",permalink:"/articles/helpful-commands/cli/gpg"},next:{title:"NGINX",permalink:"/articles/helpful-commands/cli/nginx"}},t={},i=[{value:"Kubernetes",id:"kubernetes",level:2},{value:"Examples",id:"examples",level:2},{value:"Helpful flags",id:"helpful-flags",level:2},{value:"Arrays (may be able to be used on strings too)",id:"arrays-may-be-able-to-be-used-on-strings-too",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"jq",children:"JQ"}),"\n",(0,l.jsx)(n.p,{children:"JQ is a command line tool to filter/format json."}),"\n",(0,l.jsx)(n.h2,{id:"kubernetes",children:"Kubernetes"}),"\n",(0,l.jsxs)(n.p,{children:["JQ is often used to parse the output from kubectl commands, for examples of that, refer to ",(0,l.jsx)(n.a,{href:"../containerization/kubernetes",children:"my notes on Kubenetes"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsx)(n.p,{children:"Select and output a property"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": "world"}\' | jq .hello\n\n"world"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Select a value from an array"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": ["world", "earth", "space"]}\' | jq .hello[0]\n\n"earth"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Select all values from an array"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": ["world", "earth", "space"]}\' | jq .hello[]\n\n"world"\n"earth"\n"space"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Select nested values from an array and object"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": [{"place": "earth", "species": "humans"},{"place": "space", "species": "space-beings"}]} | jq .hello[].species\n\n"humans"\n"space-beings"\n'})}),"\n",(0,l.jsx)(n.p,{children:"Select multiple nested values from an array and object and combine into string"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": [{"place": "earth", "species": "humans"},{"place": "space", "species": "space-beings"}]} | jq \'.hello[] | "hello, " + .species + " from " + .place\' -r\n\nhello, humans from earth\nhello, space-beings from space\n'})}),"\n",(0,l.jsx)(n.p,{children:"Equivalent to (notice rather than using jq's built in pipe, we actually pipe via the normal bash pipe to a separate jq call)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:'$ echo \'{"hello": [{"place": "earth", "species": "humans"},{"place": "space", "species": "space-beings"}]} | jq .hello[] | jq \'"hello, " + .species + " from " + .place\' -r\n\nhello, humans from earth\nhello, space-beings from space\n'})}),"\n",(0,l.jsx)(n.h2,{id:"helpful-flags",children:"Helpful flags"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"-r"}),' output as strings (i.e. not wrapped in "")']}),"\n",(0,l.jsx)(n.h2,{id:"arrays-may-be-able-to-be-used-on-strings-too",children:"Arrays (may be able to be used on strings too)"}),"\n",(0,l.jsxs)(n.p,{children:["Get specific index from array ",(0,l.jsx)(n.code,{children:"[0]"})]}),"\n",(0,l.jsxs)(n.p,{children:["Get subarray ",(0,l.jsx)(n.code,{children:"[1:3]"})," (lower bound inclusive, upper bound exclusive, i.e. [0,1,2,3] filtered by [1:2] returns [1,2])"]}),"\n",(0,l.jsxs)(n.p,{children:["Get first 3 items from array (index 0,1,2) ",(0,l.jsx)(n.code,{children:"[:3]"})]}),"\n",(0,l.jsxs)(n.p,{children:["Get last 2 items from array ",(0,l.jsx)(n.code,{children:"[-2:]"})]}),"\n",(0,l.jsxs)(n.p,{children:["Iterate over all items in array ",(0,l.jsx)(n.code,{children:"[]"})," (may also work on objects)"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>c});var l=s(7294);const a={},r=l.createContext(a);function c(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);