"use strict";(self.webpackChunkjaymartmedia=self.webpackChunkjaymartmedia||[]).push([[1930],{1451:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var s=i(5893),t=i(1151);const c={},r="VIM",l={id:"helpful-commands/ide/vim",title:"VIM",description:"vim  - Open a file with vim",source:"@site/docs/helpful-commands/ide/vim.md",sourceDirName:"helpful-commands/ide",slug:"/helpful-commands/ide/vim",permalink:"/articles/helpful-commands/ide/vim",draft:!1,unlisted:!1,editUrl:"https://github.com/jaymartmedia/jaymartmedia/tree/main/packages/create-docusaurus/templates/shared/docs/helpful-commands/ide/vim.md",tags:[],version:"current",frontMatter:{},sidebar:"commandsSidebar",previous:{title:"Kubernetes",permalink:"/articles/helpful-commands/containerization/kubernetes"},next:{title:"visual-studio",permalink:"/articles/helpful-commands/ide/visual-studio"}},o={},d=[{value:"Regex",id:"regex",level:2},{value:"Visual Copy/Paste",id:"visual-copypaste",level:2},{value:"Tabs",id:"tabs",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"vim",children:"VIM"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"vim {filename}"})," - Open a file with vim"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"vim ."})," - Open a directory in vim (starts in netrc)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":e ."})," - Browse directorys/change files (open netrc)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"gg=G"})," - format file - 'gg' = jump to top of file, '=' = format, 'G' = do it until end of file"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:'"*p'})," - paste from system clipboard"]}),"\n",(0,s.jsx)(n.h2,{id:"regex",children:"Regex"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"/test"})," -> ",(0,s.jsx)(n.code,{children:"ENTER"}),' - search file for instances of "test"']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"n"})," - repeat search (find next instance of match)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"N"})," - repeat search backwards (find previous instance of match)"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":s/old/new"})," -> ",(0,s.jsx)(n.code,{children:"ENTER"}),' - replace the first instance of "old" with "new" in the current line only']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":s/old/new/g"})," -> ",(0,s.jsx)(n.code,{children:"ENTER"}),' - replace all instances of "old" with "new" in the current line only']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":%s/old/new/g"})," -> ",(0,s.jsx)(n.code,{children:"ENTER"}),' - replace all instances of "old" with "new" in the current file']}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":%s/old/new/gc"})," -> ",(0,s.jsx)(n.code,{children:"ENTER"}),' - replace all instances of "old" with "new" in the current file but prompt for confirmation before each instance']}),"\n",(0,s.jsx)(n.h2,{id:"visual-copypaste",children:"Visual Copy/Paste"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Highlight the character you would like to start copying at"}),"\n",(0,s.jsx)(n.li,{children:'Press "v" to enter visual mode'}),"\n",(0,s.jsx)(n.li,{children:"Highlight the character you would like to stop copying at"}),"\n",(0,s.jsx)(n.li,{children:'Press "y" to yank and enter normal mode'}),"\n",(0,s.jsx)(n.li,{children:"Navigate to where you want to paste"}),"\n",(0,s.jsx)(n.li,{children:'Press "p" to paste the yanked text'}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["ref: ",(0,s.jsx)(n.a,{href:"https://linuxize.com/post/how-to-copy-cut-paste-in-vim/",children:"https://linuxize.com/post/how-to-copy-cut-paste-in-vim/"})]}),"\n",(0,s.jsx)(n.h2,{id:"tabs",children:"Tabs"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"CTRL+w SHIFT+t"})," - move current pane to new tab"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":clo"})," - close current tab"]}),"\n",(0,s.jsx)(n.h1,{id:"netrc",children:"Netrc"}),"\n",(0,s.jsxs)(n.p,{children:["Create a new file: ",(0,s.jsx)(n.code,{children:":%"})]}),"\n",(0,s.jsx)(n.h1,{id:"typical-startup",children:"Typical Startup"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"vim ."})," - open vim"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:":term"})," - open terminal in vim"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"CTRL+w SHIFT+t"})," - move terminal to new tab"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"CTRL+\\ CTRL+n"})," - in terminal, switch to vim mode"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"i"})," - in terminal, switch to insert/live mode"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"gt"})," - switch between tabs"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"1gt"}),"/",(0,s.jsx)(n.code,{children:"2gt"})," - switch to first or second tab"]}),"\n",(0,s.jsx)(n.h1,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.p,{children:["vim cheat sheet: ",(0,s.jsx)(n.a,{href:"https://vim.rtorr.com/",children:"https://vim.rtorr.com/"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var s=i(7294);const t={},c=s.createContext(t);function r(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);