{"searchDocs":[{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"","version":null},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"","version":null},{"title":"FFMPEG","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/ffmpeg","content":"","keywords":"","version":"Next"},{"title":"Audio​","type":1,"pageTitle":"FFMPEG","url":"/articles/helpful-commands/cli/ffmpeg#audio","content":" ","version":"Next","tagName":"h2"},{"title":"Re-encode .mp3 audio file as .wav​","type":1,"pageTitle":"FFMPEG","url":"/articles/helpful-commands/cli/ffmpeg#re-encode-mp3-audio-file-as-wav","content":" ffmpeg -i someaudiofile.mp3 someaudiofile.wav  ","version":"Next","tagName":"h3"},{"title":"Convert video to gif​","type":1,"pageTitle":"FFMPEG","url":"/articles/helpful-commands/cli/ffmpeg#convert-video-to-gif","content":" Scale down 1080p video into 1/4: ffmpeg -i &quot;input-video.mkv&quot; -s 960x540 output.gif ","version":"Next","tagName":"h3"},{"title":"Helpful Commands","type":0,"sectionRef":"#","url":"/articles/helpful-commands/","content":"","keywords":"","version":"Next"},{"title":"CLI Tools​","type":1,"pageTitle":"Helpful Commands","url":"/articles/helpful-commands/#cli-tools","content":" FFMPEG - video/audio conversionGit - source controlGPG - file encryptionNGINX - web serverNMAP - tool for mapping/debugging networksSSH - securely connect to remote machineTMUX - terminal session/window/pane manager  ","version":"Next","tagName":"h2"},{"title":"Containerization​","type":1,"pageTitle":"Helpful Commands","url":"/articles/helpful-commands/#containerization","content":" Docker/Docker Compose - containerize applicationsKubernetes - manage containers  ","version":"Next","tagName":"h2"},{"title":"IDE/Text Editor​","type":1,"pageTitle":"Helpful Commands","url":"/articles/helpful-commands/#idetext-editor","content":" VIM - lightweight text editor often installed by defaultVisual Studio - good IDE for C# projectsVSCode - good general purpose IDE  ","version":"Next","tagName":"h2"},{"title":"Language Specific​","type":1,"pageTitle":"Helpful Commands","url":"/articles/helpful-commands/#language-specific","content":" .NET - C# frameworkAngular - frontend TS frameworkNode and NPM - server-side JS/TS engine and package managerNPM Packages - specific NPM packages that are useful in CLIPostgreSQL - open source, relational database  ","version":"Next","tagName":"h2"},{"title":"OS​","type":1,"pageTitle":"Helpful Commands","url":"/articles/helpful-commands/#os","content":" Linux/Unix - popular server OS and for IT peoplesWindows - popular desktop OS ","version":"Next","tagName":"h2"},{"title":"Git","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/git","content":"Git Git is a command line tool for tracking changes in text files. Often used by software development teams to collaborate on shared code. git checkout -b {branchName} Create a new branch off of the current branch and immediately check it out git push -u origin {branchname} Push new branch to remote git config --global http.sslVerify false - disable ssl verification (DON'T DO THIS UNLESS YOU HAVE A VERY GOOD REASON!) git config --global http.sslVerify true - enable ssl verification (always do ASAP after disabling) git update-index --skip-worktree packages/backend/local-config.json - ignore changes to a tracked file in git. This could be useful if you have to change a file locally, but don't want to commit those changes. It can be dangerous to forget that it is ignored though. Use carefully. git update-index --no-skip-worktreen packages/backend/local-config.json - stop ignoring changes to a tracked file in git. Undoes the command above. git log --shortstat --author &quot;JayMartMedia&quot; --since &quot;2 weeks ago&quot; --until &quot;1 week ago&quot; | grep &quot;files changed&quot; | awk '{files+=$1; inserted+=$4; deleted+=$6} END {print &quot;files changed:&quot;, files, &quot;lines inserted:&quot;, inserted, &quot;lines deleted:&quot;, deleted}' - check lines and files changed by user in time period","keywords":"","version":"Next"},{"title":"GPG","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/gpg","content":"GPG GPG is a command line tool for encrypting files, typically available on linux and in git bash gpg -c {filename.ext} Encrypt a file with symmetric encryption (prompts for a password, and then produces a file called {filename.ext}.gpg) gpg {filename.ext.gpg Decrypt a file (if symmetrically encrypted, prompts for a password, then produces a file called {filename.ext}, attempts to overwrite if file already exists, if no, then allows user to enter a new filename) Resource: https://linux.die.net/man/1/gpg","keywords":"","version":"Next"},{"title":"NMAP","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/nmap","content":"NMAP NMAP is a command line tool for mapping networks. Disclaimer: NMAP should only be used on networks which you are authorized to use it on. NMAP is a network tool used to nap networks and check for open ports. Check for open ports: nmap -sS -O -p80,443,8080 192.168.1.0","keywords":"","version":"Next"},{"title":"SSH","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/ssh","content":"SSH SSH is used to connect a secure shell to a remote machine. Generate SSH key files: ssh-keygen -f ~/.ssh/gcp -t rsa (generate an rsa public and privates keys in the files ~/.ssh/gcp/{id_rsa &amp; id_rsa.pub}, will be prompted for password) Use specific SSH private key: ssh -i ~/.ssh/gcp/id_rsa root@11.22.33.44 (will be prompted for password)","keywords":"","version":"Next"},{"title":"NGINX","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/nginx","content":"NGINX NGINX is a multi-purpose web server which can serve static files, act as a reverse-proxy/load-balancer, and more. Search for file with extension and fallback to nginx 404 when not found: location ~* \\.(jpg|jpeg|png|gif|ico|css|js|pdf|woff|woff2|pdf)$ { try_files $uri =404; } nginx -c $(pwd)/nginx.conf Run nginx conf in current directory","keywords":"","version":"Next"},{"title":"Docker","type":0,"sectionRef":"#","url":"/articles/helpful-commands/containerization/docker","content":"","keywords":"","version":"Next"},{"title":"Docker Specific​","type":1,"pageTitle":"Docker","url":"/articles/helpful-commands/containerization/docker#docker-specific","content":" docker rm -f $(docker ps -a -q) Remove all docker containers  docker rmi -f $(docker images -a -q Remove all docker images  docker rm $(docker stop $(docker ps --quiet --filter name=&lt;containerName&gt;)) Stop and remove docker container by name  docker ps List docker containers  docker exec -it {containername} bin/bash SSH into docker container  docker build --progress=plain -t app-name:1.0 . Remove special formatting which can collapse lines and hide some output  ","version":"Next","tagName":"h2"},{"title":"Docker Compose​","type":1,"pageTitle":"Docker","url":"/articles/helpful-commands/containerization/docker#docker-compose","content":" docker-compose up Start the docker-compose.yaml file in the same directory  docker-compose -f docker-compose-local.yaml up Startup the docker compose file specified  docker-compose up --force-recreate Start docker compose and use new containers rather than previously used containers that have been stopped  docker compose docs: https://docs.docker.com/engine/reference/commandline/compose  docker compose up docs: https://docs.docker.com/engine/reference/commandline/compose_up ","version":"Next","tagName":"h2"},{"title":"TMUX","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/tmux","content":"","keywords":"","version":"Next"},{"title":"Starting/Restarting TMUX​","type":1,"pageTitle":"TMUX","url":"/articles/helpful-commands/cli/tmux#startingrestarting-tmux","content":" To start tmux: tmux  To start tmux with a named session: tmux new -s mysession  To attach to an existing session: tmux ls then tmux attach -t {session id (number, or name if provided)}  Rename existing session: tmux rename-session -t {old session id (number or name if provided)} {new session name}  ","version":"Next","tagName":"h2"},{"title":"Pane/Tile Management​","type":1,"pageTitle":"TMUX","url":"/articles/helpful-commands/cli/tmux#panetile-management","content":" Split left and right: C-b %  Split vertically: C-b &quot;  Change selected pane: C-b &lt;arrow key&gt;  Close currently selected pane: C-d or type exit  Make pane full sized (same command to shrink again): C-b z  Resize pane in direction: C-b C-&lt;arrow ey&gt;  ","version":"Next","tagName":"h2"},{"title":"Exiting TMUX​","type":1,"pageTitle":"TMUX","url":"/articles/helpful-commands/cli/tmux#exiting-tmux","content":" You can exit tmux by exiting all the panes inside  You can exit tmux (and leave session running in background) by detaching.  Detach from current session: C-b d  Detach from sessions (prompt): C-b D  Resource: https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/ ","version":"Next","tagName":"h2"},{"title":"JQ","type":0,"sectionRef":"#","url":"/articles/helpful-commands/cli/jq","content":"","keywords":"","version":"Next"},{"title":"Kubernetes​","type":1,"pageTitle":"JQ","url":"/articles/helpful-commands/cli/jq#kubernetes","content":" JQ is often used to parse the output from kubectl commands, for examples of that, refer to my notes on Kubenetes.  ","version":"Next","tagName":"h2"},{"title":"Examples​","type":1,"pageTitle":"JQ","url":"/articles/helpful-commands/cli/jq#examples","content":" Select and output a property  $ echo '{&quot;hello&quot;: &quot;world&quot;}' | jq .hello &quot;world&quot;   Select a value from an array  $ echo '{&quot;hello&quot;: [&quot;world&quot;, &quot;earth&quot;, &quot;space&quot;]}' | jq .hello[0] &quot;earth&quot;   Select all values from an array  $ echo '{&quot;hello&quot;: [&quot;world&quot;, &quot;earth&quot;, &quot;space&quot;]}' | jq .hello[] &quot;world&quot; &quot;earth&quot; &quot;space&quot;   Select nested values from an array and object  $ echo '{&quot;hello&quot;: [{&quot;place&quot;: &quot;earth&quot;, &quot;species&quot;: &quot;humans&quot;},{&quot;place&quot;: &quot;space&quot;, &quot;species&quot;: &quot;space-beings&quot;}]} | jq .hello[].species &quot;humans&quot; &quot;space-beings&quot;   Select multiple nested values from an array and object and combine into string  $ echo '{&quot;hello&quot;: [{&quot;place&quot;: &quot;earth&quot;, &quot;species&quot;: &quot;humans&quot;},{&quot;place&quot;: &quot;space&quot;, &quot;species&quot;: &quot;space-beings&quot;}]} | jq '.hello[] | &quot;hello, &quot; + .species + &quot; from &quot; + .place' -r hello, humans from earth hello, space-beings from space   Equivalent to (notice rather than using jq's built in pipe, we actually pipe via the normal bash pipe to a separate jq call)  $ echo '{&quot;hello&quot;: [{&quot;place&quot;: &quot;earth&quot;, &quot;species&quot;: &quot;humans&quot;},{&quot;place&quot;: &quot;space&quot;, &quot;species&quot;: &quot;space-beings&quot;}]} | jq .hello[] | jq '&quot;hello, &quot; + .species + &quot; from &quot; + .place' -r hello, humans from earth hello, space-beings from space   ","version":"Next","tagName":"h2"},{"title":"Helpful flags​","type":1,"pageTitle":"JQ","url":"/articles/helpful-commands/cli/jq#helpful-flags","content":" -r output as strings (i.e. not wrapped in &quot;&quot;)  ","version":"Next","tagName":"h2"},{"title":"Arrays (may be able to be used on strings too)​","type":1,"pageTitle":"JQ","url":"/articles/helpful-commands/cli/jq#arrays-may-be-able-to-be-used-on-strings-too","content":" Get specific index from array [0]  Get subarray [1:3] (lower bound inclusive, upper bound exclusive, i.e. [0,1,2,3] filtered by [1:2] returns [1,2])  Get first 3 items from array (index 0,1,2) [:3]  Get last 2 items from array [-2:]  Iterate over all items in array [] (may also work on objects) ","version":"Next","tagName":"h2"},{"title":"Kubernetes","type":0,"sectionRef":"#","url":"/articles/helpful-commands/containerization/kubernetes","content":"","keywords":"","version":"Next"},{"title":"Namespaces​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#namespaces","content":" ","version":"Next","tagName":"h2"},{"title":"Set default namespace​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#set-default-namespace","content":" kubectl config set-context --current --namespace=&lt;namespace&gt;  ","version":"Next","tagName":"h3"},{"title":"Exec into pod​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#exec-into-pod","content":" Open bash shell kubectl exec -it myapp-123 -- /bin/bash (//bin//bash on Windows)  Run command and exit kubectl exec myapp-123 -- ls  ","version":"Next","tagName":"h2"},{"title":"Cronjobs/Jobs​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#cronjobsjobs","content":" ","version":"Next","tagName":"h2"},{"title":"Create and run a job based on a cronjob​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#create-and-run-a-job-based-on-a-cronjob","content":" this can be used to manually trigger a cronjob  kubectl create job --from=cronjob/&lt;cronjob name&gt; &lt;job name&gt;  ","version":"Next","tagName":"h3"},{"title":"JQ​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#jq","content":" JQ is a CLI tool that can be used to filter/format json. It can be used to select specific values from json output from the kubectl get &lt;resource&gt; command.  See my notes on jq for more info  ","version":"Next","tagName":"h2"},{"title":"Get all images for a pod​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#get-all-images-for-a-pod","content":" $ kubectl get pod/mypod -o json | jq '.spec.containers[].image' -r nginx image2 image3   ","version":"Next","tagName":"h3"},{"title":"Get all resource types, names, and images​","type":1,"pageTitle":"Kubernetes","url":"/articles/helpful-commands/containerization/kubernetes#get-all-resource-types-names-and-images","content":" $ kubectl get all -o json | jq '.items[] | (&quot;Resource kind: &quot; + .kind),(&quot;Resource name: &quot; + .metadata.name),(&quot;images: &quot; + spec.containers[]?.image),(&quot;&quot;)' -r Resource kind: Pod Resource name: mypod images: nginx Resource kind: Service Resource name: myservice  ","version":"Next","tagName":"h3"},{"title":"VSCode","type":0,"sectionRef":"#","url":"/articles/helpful-commands/ide/vscode","content":"","keywords":"","version":"Next"},{"title":"Setup​","type":1,"pageTitle":"VSCode","url":"/articles/helpful-commands/ide/vscode#setup","content":" ","version":"Next","tagName":"h2"},{"title":"Set git bash as your default terminal​","type":1,"pageTitle":"VSCode","url":"/articles/helpful-commands/ide/vscode#set-git-bash-as-your-default-terminal","content":" Install vscodegit bash: https://git-scm.com/downloads (if already open) Restart vscode You should now see vscode in the list of terminal options Press CTRL+SHIFT+P to open the command pallateSearch for &quot;Terminal: Select default profile&quot; that should narrow down to one optionPress enter or click on that option use the arrow keys to highlight your preferred terminal, them press enter (or just click your preferred option) ","version":"Next","tagName":"h3"},{"title":"visual-studio","type":0,"sectionRef":"#","url":"/articles/helpful-commands/ide/visual-studio","content":"","keywords":"","version":"Next"},{"title":"Visual Studio 2022​","type":1,"pageTitle":"visual-studio","url":"/articles/helpful-commands/ide/visual-studio#visual-studio-2022","content":" More extensive list of keybinds/shortcuts: https://learn.microsoft.com/en-us/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022  CTRL + , - Search for file dropdown  CTRL + ; - Search for file in solution explorer  CTRL + SHIFT + F - Pop open advanced search window.. or is this hte same as one of the above?  CTRL + K + CTRL C - Comment out selected code  CTRL + K + CTRL U - Uncomment selected commented out code  ALT + {Up Arrow | Down Arrow} - Swap line with cursor with line above or below  ALT + SHIFT + . (?) - Select next occurence of highlighted characters  CTRL + - (?) - Go back to previous location after jumping to definition with CTRL + LMB src ","version":"Next","tagName":"h2"},{"title":"VIM","type":0,"sectionRef":"#","url":"/articles/helpful-commands/ide/vim","content":"","keywords":"","version":"Next"},{"title":"Regex​","type":1,"pageTitle":"VIM","url":"/articles/helpful-commands/ide/vim#regex","content":" /test -&gt; ENTER - search file for instances of &quot;test&quot;  n - repeat search (find next instance of match)  N - repeat search backwards (find previous instance of match)  :s/old/new -&gt; ENTER - replace the first instance of &quot;old&quot; with &quot;new&quot; in the current line only  :s/old/new/g -&gt; ENTER - replace all instances of &quot;old&quot; with &quot;new&quot; in the current line only  :%s/old/new/g -&gt; ENTER - replace all instances of &quot;old&quot; with &quot;new&quot; in the current file  :%s/old/new/gc -&gt; ENTER - replace all instances of &quot;old&quot; with &quot;new&quot; in the current file but prompt for confirmation before each instance  ","version":"Next","tagName":"h2"},{"title":"Visual Copy/Paste​","type":1,"pageTitle":"VIM","url":"/articles/helpful-commands/ide/vim#visual-copypaste","content":" Highlight the character you would like to start copying atPress &quot;v&quot; to enter visual modeHighlight the character you would like to stop copying atPress &quot;y&quot; to yank and enter normal modeNavigate to where you want to pastePress &quot;p&quot; to paste the yanked text  ref: https://linuxize.com/post/how-to-copy-cut-paste-in-vim/  ","version":"Next","tagName":"h2"},{"title":"Tabs​","type":1,"pageTitle":"VIM","url":"/articles/helpful-commands/ide/vim#tabs","content":" CTRL+w SHIFT+t - move current pane to new tab  :clo - close current tab  Netrc  Create a new file: :%  Typical Startup  vim . - open vim  :term - open terminal in vim  CTRL+w SHIFT+t - move terminal to new tab  CTRL+\\ CTRL+n - in terminal, switch to vim mode  i - in terminal, switch to insert/live mode  gt - switch between tabs  1gt/2gt - switch to first or second tab  References  vim cheat sheet: https://vim.rtorr.com/ ","version":"Next","tagName":"h2"},{"title":"Angular","type":0,"sectionRef":"#","url":"/articles/helpful-commands/language-specific/angular","content":"","keywords":"","version":"Next"},{"title":"Running​","type":1,"pageTitle":"Angular","url":"/articles/helpful-commands/language-specific/angular#running","content":" ng serve --host 0.0.0.0 serve the app on the local network (by default is only accessible on local machine via localhost  ","version":"Next","tagName":"h2"},{"title":"Generation​","type":1,"pageTitle":"Angular","url":"/articles/helpful-commands/language-specific/angular#generation","content":" ","version":"Next","tagName":"h2"},{"title":"Component​","type":1,"pageTitle":"Angular","url":"/articles/helpful-commands/language-specific/angular#component","content":" https://angular.io/cli/generate#component  ng g c {componentName} shorthand for ng generate component {componentName}: Generates component, html, style, spec files and adds to componnent list in module  ng g c {componentName} -s -t: Same as above, but with inline template and styles  Dry run (-d) allows you to preview the changes. Generate a component in a particular module with inline styles and template.  $ng g c nav-module/profile-dropdown -s -t -d CREATE src/app/nav-module/profile-dropdown/profile-dropdown.component.spec.ts (690 bytes) CREATE src/app/nav-module/profile-dropdown/profile-dropdown.component.ts (294 bytes) UPDATE src/app/nav-module/nav.module.ts (560 bytes) NOTE: The &quot;dryRun&quot; flag means no changes were made.  ","version":"Next","tagName":"h3"},{"title":"Tests​","type":1,"pageTitle":"Angular","url":"/articles/helpful-commands/language-specific/angular#tests","content":" npm run test -- --include='**/app.component.spec.ts' - run tests for only specific files ","version":"Next","tagName":"h2"},{"title":"Dotnet","type":0,"sectionRef":"#","url":"/articles/helpful-commands/language-specific/dotnet","content":"","keywords":"","version":"Next"},{"title":"Start/Build App​","type":1,"pageTitle":"Dotnet","url":"/articles/helpful-commands/language-specific/dotnet#startbuild-app","content":" dotnet run --environment &quot;Production&quot; - Start application with production configuration (will use appSettings.Production.json) ","version":"Next","tagName":"h2"},{"title":"PostgreSQL","type":0,"sectionRef":"#","url":"/articles/helpful-commands/language-specific/postgresql","content":"PostgreSQL PostgreSQL is a free open source relational database. psql -U postgres Log into Postgres as user 'postgres' \\l List all databases in Postgres \\c {databasename} Connect to database \\d List all tables in Postgres database \\q Disconnect from database","keywords":"","version":"Next"},{"title":"Linux/Unix","type":0,"sectionRef":"#","url":"/articles/helpful-commands/os/linux-unix","content":"","keywords":"","version":"Next"},{"title":"Compressing files (tar)​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#compressing-files-tar","content":" Resource: https://angular.io/cli/generate#component  tar -cvf documents.tar /home/jmm/documents/ Create a tar file  -cvf = compress, verbose (list files), filename (to be compressed into)documents.tar = the output file containing files/home/jmm/documents/ = input directory or file  tar -xvf documents.tar -C /home/jmm/new-documents/ Extract from a tar file  -xvf = eXtract, verbose (list files), filename (to extract from)documents.tar = .tar file to extract from-C = directory to extract into  ","version":"Next","tagName":"h2"},{"title":"SSH​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#ssh","content":" Resource: https://linux.die.net/man/1/ssh  ssh jmm@192.168.1.123 SSH into server at 192.168.1.123 as user &quot;jmm&quot; (will be asked for password if ssh keys not setup)  ssh jmm@192.168.1.123 ls Run the ls command on the server at 192.168.1.123 and show results of command in local machine terminal  ","version":"Next","tagName":"h2"},{"title":"SCP​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#scp","content":" Resource: https://linux.die.net/man/1/scp  scp pi@192.168.1.123:/home/jmm/.bashrc /home/jmm/ use SCP to copy .bashrc file from server at 192.168.1.123 to local machine /home/jmm/ directory  scp /home/jmm/.bashrc pi@192.168.1.123:/home/jmm/ use SCP to copy .bashrc file from local machine to server at 192.168.1.123  ","version":"Next","tagName":"h2"},{"title":"GREP​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#grep","content":" Resources:  General: https://www.geeksforgeeks.org/grep-command-in-unixlinux/Exclude with grep: https://linuxize.com/post/grep-exclude/  grep Docker ./readme.md search for all lines that contain &quot;Docker&quot; in the readme.md file  grep -r --exclude-dir=node_modules Docker search for all lines that contain &quot;Docker&quot; recursively excluding the node_modules directory  grep -r --exclude=*.{png,jpg} Docker search for &quot;Docker&quot; recursively and exclude files of type .png and .jpg  grep -Irn Docker recursively search for &quot;Docker&quot; while excluding binary files and return the line number  -I -- process a binary file as if it did not contain matching data; -n -- prefix each line of output with the 1-based line number within its input file -i -- case insensitive search  ","version":"Next","tagName":"h2"},{"title":"CURL​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#curl","content":" curl https://www.website.com/file.pdf --output file.pdf Download the file at the web address specified and save to an output file  curl -k https://www.website.com/file.pdf --output file.pdf allow insecure/self-signed-cert  ","version":"Next","tagName":"h2"},{"title":"Network​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#network","content":" lsof -i -P -n | grep LISTEN Check open ports  ","version":"Next","tagName":"h2"},{"title":"Command History Tricks​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#command-history-tricks","content":" ","version":"Next","tagName":"h2"},{"title":"View recent commands​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#view-recent-commands","content":" history - view recent commands  history | grep -i &quot;cargo&quot; - view recent commands in history that include &quot;cargo&quot;, -i is case-insensitive  !dotnet:p - display the most recent command that started with &quot;dotnet&quot;  !12:p - display the command at index 12  ","version":"Next","tagName":"h3"},{"title":"Rerun recent commands​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#rerun-recent-commands","content":" CTRL + p - paste in the most recent command that you ran, need to hit enter to run  !! - immediately rerun last command  !dotnet - immediately rerun last command that started with &quot;dotnet&quot;  !12 - immediately rerun command at index 12  ","version":"Next","tagName":"h3"},{"title":"Misc​","type":1,"pageTitle":"Linux/Unix","url":"/articles/helpful-commands/os/linux-unix#misc","content":" diff &lt;(ls old) &lt;(ls new) diff the output of two commands (such as comparing the contents of two directories)  echo -n &quot;string to encode here&quot; | base64 -w 0 base64 encode a string. -n removes the newline character when echoing, -w 0 prevents auto wrapping lines (default is 76 chars, base64 --help for more info)  printf '%-32s' &quot;Here is text!&quot; &gt;&gt; /dev/ttyS3 print a string padded with spaces to 32char and send to serial device  Read in a secret value (such as a password) from the command line so that it doesn't appear in shell history:  #!/bin/sh echo -n &quot;Enter secret: &quot; # echo text with no newline read -s secret # read in secret without showing chars echo $secret # do something with secret value (defo don't echo it)  ","version":"Next","tagName":"h2"},{"title":"NPM Packages","type":0,"sectionRef":"#","url":"/articles/helpful-commands/language-specific/npm-packages","content":"","keywords":"","version":"Next"},{"title":"http-server​","type":1,"pageTitle":"NPM Packages","url":"/articles/helpful-commands/language-specific/npm-packages#http-server","content":" http-server can be used to run a local web server for serving static files  ","version":"Next","tagName":"h2"},{"title":"Serve a SPA where misses return the index. html​","type":1,"pageTitle":"NPM Packages","url":"/articles/helpful-commands/language-specific/npm-packages#serve-a-spa-where-misses-return-the-index-html","content":" npx http-server ./dist -p 8080 --proxy http://localhost:8080? ","version":"Next","tagName":"h3"},{"title":"Windows","type":0,"sectionRef":"#","url":"/articles/helpful-commands/os/windows","content":"","keywords":"","version":"Next"},{"title":"Keyboard Shortcuts​","type":1,"pageTitle":"Windows","url":"/articles/helpful-commands/os/windows#keyboard-shortcuts","content":" {WIN} + {CTRL} + {Left|Right Arrow} Switch desktops  {WIN} + {TAB} View all open windows in tiled overlay (and desktops along top of screen)  {WIN} + {SHIFT} + S Open screen/window/selection capture (may be Win 10 only) ","version":"Next","tagName":"h2"},{"title":"Node and NPM","type":0,"sectionRef":"#","url":"/articles/helpful-commands/language-specific/node-and-npm","content":"","keywords":"","version":"Next"},{"title":"Node​","type":1,"pageTitle":"Node and NPM","url":"/articles/helpful-commands/language-specific/node-and-npm#node","content":" ","version":"Next","tagName":"h2"},{"title":"NPM​","type":1,"pageTitle":"Node and NPM","url":"/articles/helpful-commands/language-specific/node-and-npm#npm","content":" npm install {packageName} --registry={registryUrl} install from specific npm registry  npm install {packageName} --registry=https://registry.npmjs.org install from npm public registry  ","version":"Next","tagName":"h2"},{"title":"NPX​","type":1,"pageTitle":"Node and NPM","url":"/articles/helpful-commands/language-specific/node-and-npm#npx","content":" npx can be used to run npm packages directly without globally installing them  npm_config_registry=https://registry.npmjs.org npx create-block-app@latest my-block2 --template react run a command with npx using the public registry  ","version":"Next","tagName":"h2"},{"title":"NVM​","type":1,"pageTitle":"Node and NPM","url":"/articles/helpful-commands/language-specific/node-and-npm#nvm","content":" NVM (Node Version Manager) is a tool for easily installing and changing versions of node  Windows: https://github.com/coreybutler/nvm-windows  Linux/Mac(?): https://github.com/nvm-sh/nvm  ","version":"Next","tagName":"h2"},{"title":"Disable HTTPS (Dangerous)​","type":1,"pageTitle":"Node and NPM","url":"/articles/helpful-commands/language-specific/node-and-npm#disable-https-dangerous","content":" These commands can make you vulnerable to man-in-the-middle attacks  npm set strict-ssl false  NODE_TLS_REJECT_UNAUTHORIZED=0 npm install {package} ","version":"Next","tagName":"h2"},{"title":"index","type":0,"sectionRef":"#","url":"/articles/helpful-resources/","content":"index //import DocCardList from '@theme/DocCardList'; test","keywords":"","version":"Next"},{"title":"test-page","type":0,"sectionRef":"#","url":"/articles/helpful-resources/test-page","content":"","keywords":"","version":"Next"},{"title":"Here are some helpful resources​","type":1,"pageTitle":"test-page","url":"/articles/helpful-resources/test-page#here-are-some-helpful-resources","content":" jaymartmedia website ","version":"Next","tagName":"h2"},{"title":"newpage","type":0,"sectionRef":"#","url":"/articles/helpful-resources/test/newpage","content":"","keywords":"","version":"Next"},{"title":"here is a test page​","type":1,"pageTitle":"newpage","url":"/articles/helpful-resources/test/newpage#here-is-a-test-page","content":"","version":"Next","tagName":"h2"}],"options":{"id":"default"}}